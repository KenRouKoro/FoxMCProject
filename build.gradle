plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}
apply from:'commonsettings.gradle'
group = 'com.foxapplication.mc'
version  = ProjectVersion

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'


}

test {
    useJUnitPlatform()
}

import java.nio.file.Files
import java.nio.file.Paths

tasks.register('mergeManifests') {
    doFirst {
        // 清空 external 目录
        delete "$buildDir/external"
    }
    doLast {
        def forgeManifest = "$buildDir/external/Forge/META-INF/MANIFEST.MF"
        def fabricManifest = "$buildDir/external/Fabric/META-INF/MANIFEST.MF"
        def paperManifest = "$buildDir/external/Paper/META-INF/MANIFEST.MF"
        def commonManifest = "$buildDir/external/Common/META-INF/MANIFEST.MF"
        def velocityManifest = "$buildDir/external/Velocity/META-INF/MANIFEST.MF"
        def waterfallManifest = "$buildDir/external/Waterfall/META-INF/MANIFEST.MF"
        def mergedManifest = "$buildDir/external/META-INF/MANIFEST.MF"

        copy {
            from(zipTree("foxcoreneoforge/build/libs/foxcoreneoforge-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Forge")
        }
        copy {
            from(zipTree("foxcorefabric/build/libs/foxcorefabric-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Fabric")
        }
        copy {
            from(zipTree("foxcorepaper/build/libs/foxcorepaper-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Paper")
        }
        copy {
            from(zipTree("foxcorevelocity/build/libs/foxcorevelocity-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Velocity")
        }
        copy {
            from(zipTree("foxcorewaterfall/build/libs/foxcorewaterfall-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Waterfall")
        }
        copy {
            from(zipTree("foxcore/build/libs/foxcore-${version}.jar")) {
                include 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external/Common")
        }

        // 读取所有 MANIFEST.MF 文件的内容
        def forgeLines = Files.readAllLines(Paths.get(forgeManifest))
        def fabricLines = Files.readAllLines(Paths.get(fabricManifest))
        def paperLines = Files.readAllLines(Paths.get(paperManifest))
        def velocityLines = Files.readAllLines(Paths.get(velocityManifest))
        def waterfallLines = Files.readAllLines(Paths.get(waterfallManifest))
        def commonLines = Files.readAllLines(Paths.get(commonManifest))

        // 合并多个 MANIFEST.MF 文件的内容，去掉重复行并在合适的地方换行
        def manifestContent = new LinkedHashSet<>()
        manifestContent.addAll(forgeLines)
        manifestContent.addAll(fabricLines)
        manifestContent.addAll(paperLines)
        manifestContent.addAll(velocityLines)
        manifestContent.addAll(waterfallLines)
        manifestContent.addAll(commonLines)

        // 将合并后的内容写入新的 MANIFEST.MF 文件，并在文件末尾添加换行符
        Files.createDirectories(Paths.get("$buildDir/external/META-INF"))
        def manifestContentWithoutEmptyLines = manifestContent.findAll { it != "" }
        Files.write(Paths.get(mergedManifest), (manifestContentWithoutEmptyLines.join("\n") + "\n").getBytes())

        // 提取 Forge、Fabric、Paper 文件夹内除了 META-INF/MANIFEST.MF 之外的其他内容
        copy {
            from(zipTree("foxcoreneoforge/build/libs/foxcoreneoforge-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
        copy {
            from(zipTree("foxcorefabric/build/libs/foxcorefabric-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
        copy {
            from(zipTree("foxcorepaper/build/libs/foxcorepaper-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
        copy {
            from(zipTree("foxcorevelocity/build/libs/foxcorevelocity-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
        copy {
            from(zipTree("foxcorewaterfall/build/libs/foxcorewaterfall-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
        copy {
            from(zipTree("foxcore/build/libs/foxcore-${version}.jar")) {
                exclude 'META-INF/MANIFEST.MF'
            }
            into("$buildDir/external")
        }
    }
}
shadowJar {
    dependsOn(mergeManifests)
    from("$buildDir/external")
    exclude("Forge/**")
    exclude("Fabric/**")
    exclude("Common/**")
    exclude("Paper/**")
    exclude("Velocity/**")
    exclude("Waterfall/**")
    manifest {
        from("$buildDir/external/META-INF/MANIFEST.MF")
    }
    dependencies {
        // 排除其他依赖
        exclude(dependency('org.junit.jupiter:junit-jupiter-api'))
        exclude(dependency('org.junit.jupiter:junit-jupiter-engine'))
    }
    archiveFileName.set("FoxCore-${ProjectVersion}-For-NeoForge-Fabric-Paper-Velocity-Waterfall-Minecraft1.20.4.jar")
}
